/*
 * Ember API
 *
 * Comprehensive specifications for all Ember API endpoints, incorporating the complete set of DeFi capabilities.
 *
 * The version of the OpenAPI document: 0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateLimitOrderRequest {
    #[serde(rename = "fromAddress")]
    pub from_address: String,
    #[serde(rename = "sellToken")]
    pub sell_token: Box<models::CreateSwapRequestSellToken>,
    #[serde(rename = "buyToken")]
    pub buy_token: Box<models::CreateLimitOrderRequestBuyToken>,
    #[serde(rename = "sellAmount")]
    pub sell_amount: String,
    #[serde(rename = "limitPrice")]
    pub limit_price: String,
    #[serde(rename = "expiration")]
    pub expiration: String,
    #[serde(rename = "maxFee")]
    pub max_fee: String,
}

impl CreateLimitOrderRequest {
    pub fn new(from_address: String, sell_token: models::CreateSwapRequestSellToken, buy_token: models::CreateLimitOrderRequestBuyToken, sell_amount: String, limit_price: String, expiration: String, max_fee: String) -> CreateLimitOrderRequest {
        CreateLimitOrderRequest {
            from_address,
            sell_token: Box::new(sell_token),
            buy_token: Box::new(buy_token),
            sell_amount,
            limit_price,
            expiration,
            max_fee,
        }
    }
}

