/*
 * Ember API
 *
 * Comprehensive specifications for all Ember API endpoints, incorporating the complete set of DeFi capabilities.
 *
 * The version of the OpenAPI document: 0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UnstakeTokensRequest {
    #[serde(rename = "fromAddress")]
    pub from_address: String,
    #[serde(rename = "protocol")]
    pub protocol: String,
    #[serde(rename = "stakePositionId")]
    pub stake_position_id: String,
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "maxFee")]
    pub max_fee: String,
    #[serde(rename = "recipient", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub recipient: Option<Option<String>>,
}

impl UnstakeTokensRequest {
    pub fn new(from_address: String, protocol: String, stake_position_id: String, amount: String, max_fee: String) -> UnstakeTokensRequest {
        UnstakeTokensRequest {
            from_address,
            protocol,
            stake_position_id,
            amount,
            max_fee,
            recipient: None,
        }
    }
}

