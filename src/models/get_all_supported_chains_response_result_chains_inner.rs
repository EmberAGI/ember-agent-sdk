/*
 * Ember API
 *
 * Comprehensive specifications for all Ember API endpoints, incorporating the complete set of DeFi capabilities.
 *
 * The version of the OpenAPI document: 0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetAllSupportedChainsResponseResultChainsInner {
    #[serde(rename = "chainId")]
    pub chain_id: i32,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "nativeCurrency")]
    pub native_currency: Box<models::GetAllSupportedChainsResponseResultChainsInnerNativeCurrency>,
    #[serde(rename = "rpcUrls")]
    pub rpc_urls: Vec<String>,
    #[serde(rename = "blockExplorer")]
    pub block_explorer: String,
    #[serde(rename = "features")]
    pub features: Vec<String>,
    #[serde(rename = "status")]
    pub status: String,
}

impl GetAllSupportedChainsResponseResultChainsInner {
    pub fn new(chain_id: i32, name: String, native_currency: models::GetAllSupportedChainsResponseResultChainsInnerNativeCurrency, rpc_urls: Vec<String>, block_explorer: String, features: Vec<String>, status: String) -> GetAllSupportedChainsResponseResultChainsInner {
        GetAllSupportedChainsResponseResultChainsInner {
            chain_id,
            name,
            native_currency: Box::new(native_currency),
            rpc_urls,
            block_explorer,
            features,
            status,
        }
    }
}

