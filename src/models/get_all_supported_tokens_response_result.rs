/*
 * Ember API
 *
 * Comprehensive specifications for all Ember API endpoints, incorporating the complete set of DeFi capabilities.
 *
 * The version of the OpenAPI document: 0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetAllSupportedTokensResponseResult {
    #[serde(rename = "tokens", skip_serializing_if = "Option::is_none")]
    pub tokens: Option<Vec<models::GetAllSupportedTokensResponseResultTokensInner>>,
    #[serde(rename = "pagination", skip_serializing_if = "Option::is_none")]
    pub pagination: Option<Box<models::GetAllSupportedTokensResponseResultPagination>>,
}

impl GetAllSupportedTokensResponseResult {
    pub fn new() -> GetAllSupportedTokensResponseResult {
        GetAllSupportedTokensResponseResult {
            tokens: None,
            pagination: None,
        }
    }
}

