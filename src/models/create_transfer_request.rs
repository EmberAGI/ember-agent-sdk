/*
 * Ember API
 *
 * Comprehensive specifications for all Ember API endpoints, incorporating the complete set of DeFi capabilities.
 *
 * The version of the OpenAPI document: 0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateTransferRequest {
    #[serde(rename = "chainId")]
    pub chain_id: i32,
    #[serde(rename = "fromAddress")]
    pub from_address: String,
    #[serde(rename = "toAddress")]
    pub to_address: String,
    #[serde(rename = "token")]
    pub token: String,
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "maxFee")]
    pub max_fee: String,
}

impl CreateTransferRequest {
    pub fn new(chain_id: i32, from_address: String, to_address: String, token: String, amount: String, max_fee: String) -> CreateTransferRequest {
        CreateTransferRequest {
            chain_id,
            from_address,
            to_address,
            token,
            amount,
            max_fee,
        }
    }
}

