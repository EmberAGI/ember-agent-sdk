/*
 * Ember API
 *
 * Comprehensive specifications for all Ember API endpoints, incorporating the complete set of DeFi capabilities.
 *
 * The version of the OpenAPI document: 0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetTokenDataResponseResult {
    #[serde(rename = "tokenAddress", skip_serializing_if = "Option::is_none")]
    pub token_address: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "decimals", skip_serializing_if = "Option::is_none")]
    pub decimals: Option<i32>,
    #[serde(rename = "totalSupply", skip_serializing_if = "Option::is_none")]
    pub total_supply: Option<String>,
    #[serde(rename = "holders", skip_serializing_if = "Option::is_none")]
    pub holders: Option<i32>,
    #[serde(rename = "contractURI", skip_serializing_if = "Option::is_none")]
    pub contract_uri: Option<String>,
}

impl GetTokenDataResponseResult {
    pub fn new() -> GetTokenDataResponseResult {
        GetTokenDataResponseResult {
            token_address: None,
            name: None,
            symbol: None,
            decimals: None,
            total_supply: None,
            holders: None,
            contract_uri: None,
        }
    }
}

