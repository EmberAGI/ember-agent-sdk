/*
 * Ember API
 *
 * Comprehensive specifications for all Ember API endpoints, incorporating the complete set of DeFi capabilities.
 *
 * The version of the OpenAPI document: 0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WithdrawLentTokensResponseResultWithdrawalDetails {
    #[serde(rename = "withdrawnToken")]
    pub withdrawn_token: Box<models::WithdrawLentTokensResponseResultWithdrawalDetailsWithdrawnToken>,
    #[serde(rename = "remainingPosition")]
    pub remaining_position: Box<models::WithdrawLentTokensResponseResultWithdrawalDetailsRemainingPosition>,
    #[serde(rename = "earnedInterest")]
    pub earned_interest: String,
}

impl WithdrawLentTokensResponseResultWithdrawalDetails {
    pub fn new(withdrawn_token: models::WithdrawLentTokensResponseResultWithdrawalDetailsWithdrawnToken, remaining_position: models::WithdrawLentTokensResponseResultWithdrawalDetailsRemainingPosition, earned_interest: String) -> WithdrawLentTokensResponseResultWithdrawalDetails {
        WithdrawLentTokensResponseResultWithdrawalDetails {
            withdrawn_token: Box::new(withdrawn_token),
            remaining_position: Box::new(remaining_position),
            earned_interest,
        }
    }
}

