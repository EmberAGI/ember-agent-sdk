/*
 * Ember API
 *
 * Comprehensive specifications for all Ember API endpoints, incorporating the complete set of DeFi capabilities.
 *
 * The version of the OpenAPI document: 0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WithdrawalDetails {
    #[serde(rename = "token0")]
    pub token0: Box<models::WithdrawalDetailsToken0>,
    #[serde(rename = "token1")]
    pub token1: Box<models::WithdrawalDetailsToken1>,
    #[serde(rename = "collectedFees")]
    pub collected_fees: Box<models::WithdrawalDetailsCollectedFees>,
}

impl WithdrawalDetails {
    pub fn new(token0: models::WithdrawalDetailsToken0, token1: models::WithdrawalDetailsToken1, collected_fees: models::WithdrawalDetailsCollectedFees) -> WithdrawalDetails {
        WithdrawalDetails {
            token0: Box::new(token0),
            token1: Box::new(token1),
            collected_fees: Box::new(collected_fees),
        }
    }
}

