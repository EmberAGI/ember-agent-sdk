/*
 * Ember API
 *
 * Comprehensive specifications for all Ember API endpoints, incorporating the complete set of DeFi capabilities.
 *
 * The version of the OpenAPI document: 0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepayBorrowedTokensResponseResultRepaymentDetails {
    #[serde(rename = "borrowPositionId")]
    pub borrow_position_id: String,
    #[serde(rename = "repaidAmount")]
    pub repaid_amount: String,
    #[serde(rename = "remainingDebt")]
    pub remaining_debt: String,
    #[serde(rename = "collateralStatus")]
    pub collateral_status: String,
}

impl RepayBorrowedTokensResponseResultRepaymentDetails {
    pub fn new(borrow_position_id: String, repaid_amount: String, remaining_debt: String, collateral_status: String) -> RepayBorrowedTokensResponseResultRepaymentDetails {
        RepayBorrowedTokensResponseResultRepaymentDetails {
            borrow_position_id,
            repaid_amount,
            remaining_debt,
            collateral_status,
        }
    }
}

