/*
 * Ember API
 *
 * Comprehensive specifications for all Ember API endpoints, incorporating the complete set of DeFi capabilities.
 *
 * The version of the OpenAPI document: 0.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ValidationErrorError {
    #[serde(rename = "code")]
    pub code: String,
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "validationErrors")]
    pub validation_errors: Vec<models::ValidationErrorErrorValidationErrorsInner>,
}

impl ValidationErrorError {
    pub fn new(code: String, message: String, validation_errors: Vec<models::ValidationErrorErrorValidationErrorsInner>) -> ValidationErrorError {
        ValidationErrorError {
            code,
            message,
            validation_errors,
        }
    }
}

